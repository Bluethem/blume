# This file should ensure the existence of records required to run the application in every environment (production,
# development, test). The code here should be idempotent so that it can be executed at any point in every environment.
# The data can then be loaded with the bin/rails db:seed command (or created alongside the database with db:setup).
#
# Example:
#
#   ["Action", "Comedy", "Drama", "Horror"].each do |genre_name|
#     MovieGenre.find_or_create_by!(name: genre_name)
#   end

# Este archivo se usa para poblar la base de datos con datos iniciales
# Ejecutar: rails db:seed

puts "Iniciando seed de datos..."

# =====================================================
# 1. CREAR USUARIOS ADMINISTRADORES
# =====================================================

puts "\n Creando administradores..."

admin1 = Usuario.create!(
  email: 'admin@hospital.com',
  password: 'password123',
  password_confirmation: 'password123',
  nombre: 'Carlos',
  apellido: 'Administrador',
  telefono: '987654321',
  direccion: 'Av. Administraci√≥n 123, Lima',
  rol: :administrador,
  activo: true
)

puts "Administrador creado: #{admin1.email}"

# =====================================================
# 2. CREAR CERTIFICACIONES
# =====================================================
puts "\n Creando certificaciones m√©dicas..."

certificaciones = [
  { nombre: 'Medicina General', institucion_emisora: 'Universidad Nacional Mayor de San Marcos', descripcion: 'Certificaci√≥n en medicina general' },
  { nombre: 'Cardiolog√≠a', institucion_emisora: 'Colegio M√©dico del Per√∫', descripcion: 'Especializaci√≥n en cardiolog√≠a' },
  { nombre: 'Pediatr√≠a', institucion_emisora: 'Hospital Nacional Cayetano Heredia', descripcion: 'Especializaci√≥n en pediatr√≠a' },
  { nombre: 'Traumatolog√≠a', institucion_emisora: 'Hospital Rebagliati', descripcion: 'Especializaci√≥n en traumatolog√≠a' },
  { nombre: 'Dermatolog√≠a', institucion_emisora: 'Universidad Peruana Cayetano Heredia', descripcion: 'Especializaci√≥n en dermatolog√≠a' },
  { nombre: 'Ginecolog√≠a', institucion_emisora: 'Instituto Nacional Materno Perinatal', descripcion: 'Especializaci√≥n en ginecolog√≠a' }
]

certificaciones_creadas = certificaciones.map do |cert|
  Certificacion.create!(cert)
end

puts "#{certificaciones_creadas.count} certificaciones creadas"

puts "\nüè• Creando especialidades m√©dicas..."

especialidades_data = [
  { nombre: 'Cardiolog√≠a', descripcion: 'Especialidad m√©dica que se encarga del estudio, diagn√≥stico y tratamiento de las enfermedades del coraz√≥n y del aparato circulatorio' },
  { nombre: 'Pediatr√≠a', descripcion: 'Rama de la medicina que se especializa en la salud y las enfermedades de los ni√±os' },
  { nombre: 'Dermatolog√≠a', descripcion: 'Especialidad m√©dica encargada del estudio de la estructura y funci√≥n de la piel' },
  { nombre: 'Oftalmolog√≠a', descripcion: 'Especialidad m√©dica que estudia las enfermedades de ojo y su tratamiento' },
  { nombre: 'Neurolog√≠a', descripcion: 'Especialidad m√©dica que trata los trastornos del sistema nervioso' },
  { nombre: 'Traumatolog√≠a', descripcion: 'Rama de la medicina que se dedica al estudio de las lesiones del aparato locomotor' },
  { nombre: 'Ginecolog√≠a', descripcion: 'Especialidad m√©dica que trata las enfermedades del sistema reproductor femenino' },
  { nombre: 'Psiquiatr√≠a', descripcion: 'Especialidad m√©dica dedicada al estudio, prevenci√≥n, diagn√≥stico y tratamiento de enfermedades mentales' }
]

especialidades_creadas = []

especialidades_data.each do |data|
  especialidad = Especialidad.find_or_create_by!(nombre: data[:nombre]) do |e|
    e.descripcion = data[:descripcion]
  end
  especialidades_creadas << especialidad
  puts "‚úÖ Especialidad: #{especialidad.nombre}"
end

# =====================================================
# CREAR M√âDICOS
# =====================================================
puts "\nüë®‚Äç‚öïÔ∏è Creando m√©dicos..."

medicos_data = [
  {
    usuario: {
      email: 'dra.garcia@hospital.com',
      password: 'password123',
      password_confirmation: 'password123',
      nombre: 'Mar√≠a',
      apellido: 'Garc√≠a L√≥pez',
      telefono: '987654321',
      direccion: 'Consultorio M√©dico, Av. Salud 456, Lima',
      rol: :medico
    },
    medico: {
      numero_colegiatura: 'CMP-12345',
      anios_experiencia: 10,
      biografia: 'M√©dico especialista con amplia experiencia en el tratamiento de enfermedades cardiovasculares.',
      costo_consulta: 150.00,
      activo: true
    }
  },
  {
    usuario: {
      email: 'dr.rodriguez@hospital.com',
      password: 'password123',
      password_confirmation: 'password123',
      nombre: 'Carlos',
      apellido: 'Rodr√≠guez P√©rez',
      telefono: '987654322',
      direccion: 'Consultorio M√©dico, Av. Los M√©dicos 789, Lima',
      rol: :medico
    },
    medico: {
      numero_colegiatura: 'CMP-23456',
      anios_experiencia: 8,
      biografia: 'Especialista en el cuidado y tratamiento de pacientes pedi√°tricos.',
      costo_consulta: 120.00,
      activo: true
    }
  },
  {
    usuario: {
      email: 'dra.martinez@hospital.com',
      password: 'password123',
      password_confirmation: 'password123',
      nombre: 'Ana',
      apellido: 'Mart√≠nez Ruiz',
      telefono: '987654323',
      direccion: 'Consultorio M√©dico, Jr. Las Flores 321, Lima',
      rol: :medico
    },
    medico: {
      numero_colegiatura: 'CMP-34567',
      anios_experiencia: 12,
      biografia: 'Dermat√≥loga con experiencia en tratamientos est√©ticos y m√©dicos.',
      costo_consulta: 180.00,
      activo: true
    }
  },
  {
    usuario: {
      email: 'dr.fernandez@hospital.com',
      password: 'password123',
      password_confirmation: 'password123',
      nombre: 'Luis',
      apellido: 'Fern√°ndez Torres',
      telefono: '987654324',
      direccion: 'Consultorio M√©dico, Av. Principal 654, Lima',
      rol: :medico
    },
    medico: {
      numero_colegiatura: 'CMP-45678',
      anios_experiencia: 15,
      biografia: 'Oftalm√≥logo especializado en cirug√≠a refractiva.',
      costo_consulta: 200.00,
      activo: true
    }
  },
  {
    usuario: {
      email: 'dra.lopez@hospital.com',
      password: 'password123',
      password_confirmation: 'password123',
      nombre: 'Patricia',
      apellido: 'L√≥pez G√≥mez',
      telefono: '987654325',
      direccion: 'Consultorio M√©dico, Av. Los Pinos 987, Lima',
      rol: :medico
    },
    medico: {
      numero_colegiatura: 'CMP-56789',
      anios_experiencia: 9,
      biografia: 'Neur√≥loga especializada en enfermedades neurodegenerativas.',
      costo_consulta: 170.00,
      activo: true
    }
  },
  {
    usuario: {
      email: 'dr.sanchez@hospital.com',
      password: 'password123',
      password_confirmation: 'password123',
      nombre: 'Jorge',
      apellido: 'S√°nchez Vega',
      telefono: '987654326',
      direccion: 'Consultorio M√©dico, Jr. Los Olivos 147, Lima',
      rol: :medico
    },
    medico: {
      numero_colegiatura: 'CMP-67890',
      anios_experiencia: 11,
      biografia: 'Traumat√≥logo con experiencia en cirug√≠a ortop√©dica y deportiva.',
      costo_consulta: 160.00,
      activo: true
    }
  }
]

medicos_creados = []

# ‚úÖ CORRECCI√ìN: Usar each_with_index en lugar de each
medicos_data.each_with_index do |data, index|
  begin
    usuario = Usuario.create!(data[:usuario])
    medico = Medico.create!(data[:medico].merge(usuario: usuario))
    
    # ‚úÖ Asignar especialidad principal (rotar entre las disponibles)
    especialidad_index = index % especialidades_creadas.length
    medico.agregar_especialidad(especialidades_creadas[especialidad_index].id, es_principal: true)
    
    # ‚úÖ (Opcional) Asignar especialidad secundaria a m√©dicos pares
    if index.even? && especialidades_creadas.length > 1
      especialidad_secundaria_index = (index + 1) % especialidades_creadas.length
      medico.agregar_especialidad(especialidades_creadas[especialidad_secundaria_index].id, es_principal: false)
    end
    
    # ‚úÖ ASIGNAR CERTIFICACIONES (si quieres agregarlas manualmente)
    # Por ahora las asignamos aleatoriamente
    certificaciones_a_asignar = certificaciones_creadas.sample(rand(1..3))
    certificaciones_a_asignar.each do |certificacion|
      MedicoCertificacion.create!(
        medico: medico,
        certificacion: certificacion,
        fecha_obtencion: rand(1..10).years.ago.to_date
      )
    end
    
    medicos_creados << medico
    puts "‚úÖ M√©dico creado: #{usuario.nombre} #{usuario.apellido} - #{medico.especialidad_principal.nombre}"
    
    # Crear horarios para este m√©dico
    # Lunes a Viernes: 9:00 AM - 1:00 PM
    (1..5).each do |dia|
      HorarioMedico.create!(
        medico: medico,
        dia_semana: dia,
        hora_inicio: '09:00',
        hora_fin: '13:00',
        duracion_cita_minutos: 30,
        activo: true
      )
    end
    
    # Lunes a Viernes: 3:00 PM - 7:00 PM
    (1..5).each do |dia|
      HorarioMedico.create!(
        medico: medico,
        dia_semana: dia,
        hora_inicio: '15:00',
        hora_fin: '19:00',
        duracion_cita_minutos: 30,
        activo: true
      )
    end
    
    # S√°bados: 9:00 AM - 1:00 PM
    HorarioMedico.create!(
      medico: medico,
      dia_semana: 6,
      hora_inicio: '09:00',
      hora_fin: '13:00',
      duracion_cita_minutos: 30,
      activo: true
    )
    
    puts "  ‚úÖ Horarios creados para Dr(a). #{medico.usuario.nombre} #{medico.usuario.apellido}"
    
  rescue => e
    puts "‚ùå Error al crear m√©dico: #{e.message}"
    puts "   Detalles: #{e.class}"
    puts "   Backtrace: #{e.backtrace.first(3).join("\n   ")}"
  end
end

puts "\n‚úÖ #{medicos_creados.length} m√©dicos creados exitosamente"

# =====================================================
# 5. CREAR PACIENTES
# =====================================================
puts "\n Creando pacientes..."

pacientes_data = [
  {
    usuario: {
      email: 'juan.perez@email.com',
      password: 'password123',
      password_confirmation: 'password123',
      nombre: 'Juan',
      apellido: 'P√©rez G√≥mez',
      telefono: '912345678',
      direccion: 'Av. Los Rosales 123, Lima',
      rol: :paciente
    },
    paciente: {
      fecha_nacimiento: '1985-05-15',
      genero: :masculino,
      numero_documento: '12345678',
      tipo_documento: :dni,
      grupo_sanguineo: 'O+',
      alergias: 'Penicilina',
      observaciones: 'Paciente con hipertensi√≥n controlada'
    }
  },
  {
    usuario: {
      email: 'maria.lopez@email.com',
      password: 'password123',
      password_confirmation: 'password123',
      nombre: 'Mar√≠a',
      apellido: 'L√≥pez Silva',
      telefono: '923456789',
      direccion: 'Jr. Las Flores 456, Lima',
      rol: :paciente
    },
    paciente: {
      fecha_nacimiento: '1990-08-22',
      genero: :femenino,
      numero_documento: '23456789',
      tipo_documento: :dni,
      grupo_sanguineo: 'A+',
      alergias: 'Ninguna',
      observaciones: nil
    }
  },
  {
    usuario: {
      email: 'carlos.rodriguez@email.com',
      password: 'password123',
      password_confirmation: 'password123',
      nombre: 'Carlos',
      apellido: 'Rodr√≠guez Vega',
      telefono: '934567890',
      direccion: 'Av. Principal 789, Lima',
      rol: :paciente
    },
    paciente: {
      fecha_nacimiento: '1978-12-10',
      genero: :masculino,
      numero_documento: '34567890',
      tipo_documento: :dni,
      grupo_sanguineo: 'B+',
      alergias: 'Polen, √°caros',
      observaciones: 'Paciente con diabetes tipo 2'
    }
  },
  {
    usuario: {
      email: 'ana.martinez@email.com',
      password: 'password123',
      password_confirmation: 'password123',
      nombre: 'Ana',
      apellido: 'Mart√≠nez Flores',
      telefono: '945678901',
      direccion: 'Jr. Los Pinos 321, Lima',
      rol: :paciente
    },
    paciente: {
      fecha_nacimiento: '1995-03-18',
      genero: :femenino,
      numero_documento: '45678901',
      tipo_documento: :dni,
      grupo_sanguineo: 'AB+',
      alergias: 'Mariscos',
      observaciones: nil
    }
  },
  {
    usuario: {
      email: 'pedro.sanchez@email.com',
      password: 'password123',
      password_confirmation: 'password123',
      nombre: 'Pedro',
      apellido: 'S√°nchez Castro',
      telefono: '956789012',
      direccion: 'Av. Las Palmeras 654, Lima',
      rol: :paciente
    },
    paciente: {
      fecha_nacimiento: '1982-07-25',
      genero: :masculino,
      numero_documento: '56789012',
      tipo_documento: :dni,
      grupo_sanguineo: 'O-',
      alergias: 'Ninguna',
      observaciones: 'Paciente deportista'
    }
  },
  {
    usuario: {
      email: 'lucia.torres@email.com',
      password: 'password123',
      password_confirmation: 'password123',
      nombre: 'Luc√≠a',
      apellido: 'Torres Mendoza',
      telefono: '967890123',
      direccion: 'Jr. Los Eucaliptos 987, Lima',
      rol: :paciente
    },
    paciente: {
      fecha_nacimiento: '2000-11-30',
      genero: :femenino,
      numero_documento: '67890123',
      tipo_documento: :dni,
      grupo_sanguineo: 'A-',
      alergias: 'Aspirina',
      observaciones: nil
    }
  }
]

pacientes_creados = []

pacientes_data.each do |data|
  usuario = Usuario.create!(data[:usuario])
  paciente = Paciente.create!(data[:paciente].merge(usuario: usuario))
  pacientes_creados << paciente
  puts "‚úÖ Paciente creado: #{usuario.nombre} #{usuario.apellido}"
end

# =====================================================
# 6. CREAR CITAS DE EJEMPLO
# =====================================================
puts "\n Creando citas de ejemplo..."

# Cita 1: Pendiente - Pr√≥xima semana
cita1 = Cita.create!(
  paciente: pacientes_creados[0],
  medico: medicos_creados[0],
  fecha_hora_inicio: 1.week.from_now.beginning_of_week.change(hour: 10, min: 0), # Lunes
  fecha_hora_fin: 1.week.from_now.beginning_of_week.change(hour: 10, min: 30),
  estado: :pendiente,
  motivo_consulta: 'Control de presi√≥n arterial',
  costo: medicos_creados[0].costo_consulta
)

Notificacion.create!(
  usuario: pacientes_creados[0].usuario,
  cita: cita1,
  tipo: :cita_creada,
  titulo: 'Cita creada exitosamente',
  mensaje: "Tu cita con Dr. #{medicos_creados[0].usuario.nombre} #{medicos_creados[0].usuario.apellido} ha sido creada para el #{cita1.fecha_hora_inicio.strftime('%d/%m/%Y a las %H:%M')}",
  leida: false
)

puts " Cita creada: Paciente #{pacientes_creados[0].usuario.nombre} con Dr. #{medicos_creados[0].usuario.nombre}"

# Cita 2: Confirmada - En 3 d√≠as
fecha_cita2 = 3.days.from_now
fecha_cita2 = fecha_cita2.next_occurring(:monday) if fecha_cita2.sunday? || fecha_cita2.saturday?
cita2 = Cita.create!(
  paciente: pacientes_creados[1],
  medico: medicos_creados[1],
  fecha_hora_inicio: fecha_cita2.change(hour: 15, min: 30),
  fecha_hora_fin: fecha_cita2.change(hour: 16, min: 0),
  estado: :confirmada,
  motivo_consulta: 'Control de ni√±o sano',
  costo: medicos_creados[1].costo_consulta
)

Notificacion.create!(
  usuario: pacientes_creados[1].usuario,
  cita: cita2,
  tipo: :cita_confirmada,
  titulo: 'Cita confirmada',
  mensaje: "Tu cita con Dra. #{medicos_creados[1].usuario.nombre} #{medicos_creados[1].usuario.apellido} ha sido confirmada",
  leida: true,
  fecha_leida: 1.day.ago
)

puts " Cita creada: Paciente #{pacientes_creados[1].usuario.nombre} con Dra. #{medicos_creados[1].usuario.nombre}"

# Cita 3: Completada - Hace 1 semana
cita3 = Cita.create!(
  paciente: pacientes_creados[2],
  medico: medicos_creados[2],
  fecha_hora_inicio: 1.week.ago.beginning_of_week.change(hour: 11, min: 0), # Lunes pasado
  fecha_hora_fin: 1.week.ago.beginning_of_week.change(hour: 11, min: 30),
  estado: :completada,
  motivo_consulta: 'Dolor de rodilla',
  observaciones: 'Paciente presenta inflamaci√≥n leve',
  diagnostico: 'Tendinitis rotuliana. Se recomienda reposo y fisioterapia.',
  costo: medicos_creados[2].costo_consulta
)

puts " Cita creada: Paciente #{pacientes_creados[2].usuario.nombre} con Dr. #{medicos_creados[2].usuario.nombre}"

# Cita 4: Cancelada
fecha_cita4 = 5.days.ago
# Buscar el martes m√°s cercano en el pasado
while !fecha_cita4.tuesday?
  fecha_cita4 -= 1.day
end

cita4 = Cita.create!(
  paciente: pacientes_creados[3],
  medico: medicos_creados[3],
  fecha_hora_inicio: fecha_cita4.change(hour: 16, min: 0),
  fecha_hora_fin: fecha_cita4.change(hour: 16, min: 30),
  estado: :cancelada,
  motivo_consulta: 'Consulta dermatol√≥gica',
  motivo_cancelacion: 'Paciente tuvo un imprevisto laboral',
  cancelada_por_id: pacientes_creados[3].usuario.id,
  costo: medicos_creados[3].costo_consulta
)

Notificacion.create!(
  usuario: pacientes_creados[3].usuario,
  cita: cita4,
  tipo: :cita_cancelada,
  titulo: 'Cita cancelada',
  mensaje: 'Tu cita ha sido cancelada exitosamente',
  leida: true,
  fecha_leida: 2.days.ago
)

puts " Cita creada: Paciente #{pacientes_creados[3].usuario.nombre} con Dra. #{medicos_creados[3].usuario.nombre}"

# Cita 5: Pendiente - Pr√≥ximo d√≠a h√°bil
fecha_cita5 = 1.day.from_now
# Asegurar que sea d√≠a h√°bil (lunes a viernes)
while fecha_cita5.saturday? || fecha_cita5.sunday?
  fecha_cita5 += 1.day
end

cita5 = Cita.create!(
  paciente: pacientes_creados[4],
  medico: medicos_creados[4], # Ginec√≥loga
  fecha_hora_inicio: fecha_cita5.change(hour: 9, min: 30),
  fecha_hora_fin: fecha_cita5.change(hour: 10, min: 0),
  estado: :pendiente,
  motivo_consulta: 'Control prenatal',
  costo: medicos_creados[4].costo_consulta
)

# Recordatorio de cita
Notificacion.create!(
  usuario: pacientes_creados[4].usuario,
  cita: cita5,
  tipo: :recordatorio,
  titulo: 'Recordatorio de cita',
  mensaje: "Recuerda tu cita el #{cita5.fecha_hora_inicio.strftime('%d/%m/%Y a las %H:%M')} con Dra. #{medicos_creados[4].usuario.nombre} #{medicos_creados[4].usuario.apellido}",
  leida: false
)

puts "‚úÖ Cita creada: Paciente #{pacientes_creados[4].usuario.nombre} con Dra. #{medicos_creados[4].usuario.nombre}"

# Cita 6: Confirmada - Pr√≥ximo d√≠a h√°bil + 1
fecha_cita6 = 2.days.from_now
# Asegurar que sea d√≠a h√°bil (lunes a viernes)
while fecha_cita6.saturday? || fecha_cita6.sunday?
  fecha_cita6 += 1.day
end

cita6 = Cita.create!(
  paciente: pacientes_creados[5],
  medico: medicos_creados[0], # Cardi√≥logo
  fecha_hora_inicio: fecha_cita6.change(hour: 17, min: 0),
  fecha_hora_fin: fecha_cita6.change(hour: 17, min: 30),
  estado: :confirmada,
  motivo_consulta: 'Chequeo cardiol√≥gico preventivo',
  costo: medicos_creados[0].costo_consulta
)

puts "‚úÖ Cita creada: Paciente #{pacientes_creados[5].usuario.nombre} con Dr. #{medicos_creados[0].usuario.nombre}"

# =====================================================
# RESUMEN
# =====================================================
puts "\n" + "="*60
puts "¬°SEED COMPLETADO EXITOSAMENTE!"
puts "="*60
puts "Resumen de datos creados:"
puts "   - Administradores: #{Usuario.administrador.count}"
puts "   - M√©dicos: #{Medico.count}"
puts "   - Pacientes: #{Paciente.count}"
puts "   - Certificaciones: #{Certificacion.count}"
puts "   - Horarios m√©dicos: #{HorarioMedico.count}"
puts "   - Citas: #{Cita.count}"
puts "   - Notificaciones: #{Notificacion.count}"
puts "="*60
puts "\nCredenciales de acceso:"
puts "   Admin: admin@hospital.com / password123"
puts "\n   M√©dicos:"
medicos_creados.each do |medico|
  puts "   - #{medico.usuario.email} / password123"
end
puts "\n   Pacientes:"
pacientes_creados.each do |paciente|
  puts "   - #{paciente.usuario.email} / password123"
end
# =====================================================
# 7. VALORACIONES DE M√âDICOS
# =====================================================
puts "\nüìù Creando valoraciones de m√©dicos..."

comentarios_positivos = [
  "Excelente profesional, muy atento y dedicado. Me sent√≠ muy bien atendido durante toda la consulta.",
  "El doctor es muy emp√°tico y explica todo con mucha claridad. Totalmente recomendado.",
  "Muy buen m√©dico, con mucha experiencia. Las indicaciones fueron precisas y efectivas.",
  "Profesional de primer nivel. Me ayud√≥ mucho con mi tratamiento y siempre disponible para dudas.",
  "Excelente atenci√≥n m√©dica. Se tom√≥ el tiempo necesario para escucharme y resolver todas mis dudas.",
  "Un m√©dico extraordinario. Su diagn√≥stico fue acertado y el tratamiento muy efectivo.",
  "Muy recomendado. Adem√°s de ser profesional, es muy humano en su trato con los pacientes.",
  "Qued√© muy satisfecho con la atenci√≥n. El doctor realmente se preocupa por la salud de sus pacientes."
]

comentarios_buenos = [
  "Buen doctor, aunque a veces la espera es un poco larga. En general, satisfecho con la atenci√≥n.",
  "Profesional competente. La consulta fue buena, aunque me hubiera gustado m√°s tiempo de atenci√≥n.",
  "Buen m√©dico, explica bien los procedimientos. Solo mejorar√≠a un poco la puntualidad.",
  "Atenci√≥n correcta y diagn√≥stico acertado. Recomendable."
]

valoraciones_creadas = []

# Crear valoraciones para cada m√©dico
medicos_creados.each_with_index do |medico, index|
  # Cada m√©dico recibe entre 5 y 12 valoraciones
  num_valoraciones = rand(5..12)
  pacientes_disponibles = pacientes_creados.dup.shuffle
  
  num_valoraciones.times do |i|
    break if pacientes_disponibles.empty?
    
    paciente = pacientes_disponibles.pop
    
    # Verificar que el paciente tenga una cita completada con este m√©dico
    cita_completada = Cita.find_by(
      paciente: paciente,
      medico: medico,
      estado: :completada
    )
    
    next unless cita_completada
    
    # 70% de valoraciones con 5 estrellas, 20% con 4, 10% con 3
    rand_val = rand(100)
    if rand_val < 70
      calificacion = 5
      comentarios = comentarios_positivos
    elsif rand_val < 90
      calificacion = 4
      comentarios = comentarios_buenos + comentarios_positivos
    else
      calificacion = 3
      comentarios = comentarios_buenos
    end
    
    # 80% con comentario, 20% sin comentario
    comentario = rand(100) < 80 ? comentarios.sample : nil
    
    # 5% de valoraciones an√≥nimas
    anonimo = rand(100) < 5
    
    valoracion = Valoracion.create!(
      paciente: paciente,
      medico: medico,
      cita: cita_completada,
      calificacion: calificacion,
      comentario: comentario,
      anonimo: anonimo,
      created_at: cita_completada.created_at + rand(1..7).days
    )
    
    valoraciones_creadas << valoracion
  end
  
  print "."
end

puts "\n‚úÖ #{valoraciones_creadas.count} valoraciones creadas"

# Mostrar estad√≠sticas de valoraciones por m√©dico
puts "\nüìä Estad√≠sticas de valoraciones por m√©dico:"
medicos_creados.first(3).each do |medico|
  puts "\n   Dr(a). #{medico.nombre_completo}:"
  puts "   - Calificaci√≥n promedio: #{medico.calificacion_promedio} ‚≠ê"
  puts "   - Total de rese√±as: #{medico.total_resenas}"
  puts "   - Distribuci√≥n: #{medico.distribucion_calificaciones.map { |k, v| "#{k}‚≠ê: #{v}" }.join(", ")}"
end

puts "="*60
puts "\nüíª CREDENCIALES DE ACCESO:"
puts "="*60
puts "   Admin: admin@hospital.com / password123"
puts "\n   M√©dicos:"
medicos_creados.each do |medico|
  puts "   - #{medico.usuario.email} / password123"
end
puts "\n   Pacientes:"
pacientes_creados.each do |paciente|
  puts "   - #{paciente.usuario.email} / password123"
end
puts "="*60
puts "\n¬°Listo para usar!"